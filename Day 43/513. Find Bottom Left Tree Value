https://leetcode.com/problems/find-bottom-left-tree-value/submissions/1189350952

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int findBottomLeftValue(TreeNode* root) {
        queue<TreeNode*>q;
        q.push(root);
         TreeNode* temp = root;
        while(!q.empty()){
            // int size = q.size();
            // for(int i =0;i<size;i++){
                temp = q.front();
                q.pop();
                if(temp->right)q.push(temp->right);
                if(temp->left){
                    q.push(temp->left);
                    // st.push(temp->val);
                }
        }
        return temp->val;
    }
};
