# Sir's approach also there 
# that is  for(int i =0;i<n;i+=k){
#             // NEW APPROACH
#             j = min(i+k-1,n-1);
#             reverse(i,j,arr);
#         }

class Solution{
public:
    //Function to reverse every sub-array group of size k.
    void reverse(int i,int j,vector<long long>&arr){

        while(i<j){
            swap(arr[i],arr[j]);
            i++;
            j--;
        }
        
    }
    void reverseInGroups(vector<long long>& arr, int n, int k){
        // code here
        int j =0;
        for(int i =0;i<n;i+=k){
            // NEW APPROACH
            j = min(i+k-1,n-1);
            reverse(i,j,arr);
        }
        // MY approach // 
        
        
        
        // k = k%n;
        // if(k>n){
        //     reverse(arr.begin(),arr.end());
        //     // continue;
        //     // break;
        //     return;
        // }
        // int i =0;
        // while(i<n){
        //     if(n-i<k){
        //         break;
        //     }
        //         reverse(arr.begin()+i,arr.begin()+i+k);
        //     i+=k;
        // }
        // // i = i-3;
        // reverse(arr.begin()+i,arr.end());
    }
};
