class Solution {
public:
// o(rootN)
// lagrange legendre theoram
// 4k(8m+7)nahi hai n to 3 warna 4 baaki lagrange

// you have to do bottom up on your own,
 int numSquares(int n) {

     int perfectsq = (int)sqrt(n);

     if(perfectsq*perfectsq == n)return 1;

        while(n%4==0){
            n/=4;
        }
        if(n%8==7){
            // n/=8;
            // if(n-7==0){
            //     return 4;
            // }
            return 4;
        }
        for(int i =1;i*i<=n;i++){
            int squareA = i*i;
            int elementB = (int)sqrt(n-squareA);

            if(elementB*elementB==n-squareA){
                return 2;
            }
        }
        return 3;
    }
// vector<int>dp;
//     int solve(int n){
//          if(n<=0)return 0;

//         if(dp[n]!= -1){
//             return dp[n];
//         }
//         int ans = n;
//         for(int i =1;i*i<=n;i++){
//             int sq = i*i;
//             ans = min(ans,1+solve(n-sq));
//         }
//         return dp[n]=ans;
//     }
//     int numSquares(int n) {
//         dp = vector<int>(n+1,-1);
//         int ans =solve(n);
//         return ans;
//     }
};
