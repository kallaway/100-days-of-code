//{ Driver Code Starts
#include <bits/stdc++.h>
using namespace std;


// } Driver Code Ends
class Solution
{
    public:
    //Function to find a continuous sub-array which adds up to a given number.
    vector<int> subarraySum(vector<int>a, int n, long long s)
    {
        // Your code here
         vector<int> ans;
        int i = 0, j = 0;
        long long sum = a[0]; // Initialize sum to the first element
        
     if(s==0){
        //  we find that element which is 0,bcoz that will only give 
        // sum==0;
            for(int l =0;l<n;l++){
                if(a[l]==0){
                    ans.push_back(l+1);
                    ans.push_back(l+1);
                    // break;
                    return ans;
                }
            }
            if(ans.empty()==true){
                ans.push_back(-1);
                return ans;
            }
        }

        while (i < n && j < n) {
            if (sum < s) {
                j++;
                if (j < n) {
                    sum += a[j];
                }
            } else if (sum == s) {
                ans.push_back(i + 1);
                ans.push_back(j + 1);
                break;
            } else {
                sum -= a[i];
                i++;
            }
        }

        if (ans.empty()) {
            ans.push_back(-1);
        }

        return ans;
    }
    //   vector<int>ans;
    //     int i =0,j=0;
    //      if(s==0){
    //         for(int l =0;l<n;l++){
    //             if(a[l]==0){
    //                 ans.push_back(l+1);
    //                 ans.push_back(l+1);
    //                 break;
    //             }
    //         }
    //         if(ans.empty()==true){
    //             ans.push_back(-1);
    //             return ans;
    //         }
    //     }
    //     long long sum=0;
        
    //     while(i<n && j<n){
    //         if(sum<s){
    //             sum+=a[j];
    //             j++;
    //         }
    //         if(sum==s){
    //             // ans.push_back
    //             // ans={i,j};
    //             ans.push_back(i+1);
    //             ans.push_back(j);
    //             break;
    //         }
    //         while(sum>s){
    //             sum=sum-a[i];
    //             i++;
    //         }
    //     }
    //     if(ans.empty()){
    //         ans.push_back(-1);
    //         return ans;
    //     }
    //     return ans;
    // }
};

//{ Driver Code Starts.

int main()
 {
    int t;
    cin>>t;
    while(t--)
    {
        int n;
        long long s;
        cin>>n>>s;
        vector<int>arr(n);
        // int arr[n];
        const int mx = 1e9;
        for(int i=0;i<n;i++)
        {
            cin>>arr[i];
        }
        Solution ob;
        vector<int>res;
        res = ob.subarraySum(arr, n, s);
        
        for(int i = 0;i<res.size();i++)
            cout<<res[i]<<" ";
        cout<<endl;
        
    }
	return 0;
}
// } Driver Code Ends
