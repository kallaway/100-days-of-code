https://www.geeksforgeeks.org/problems/count-pairs-whose-sum-is-equal-to-x/1

optimised is below this TLE one:

class Solution{
public:
    // Function to count pairs from two linked lists whose sum is equal to a given value x.
    int countPairs(struct Node* head1, struct Node* head2, int x) {
        // Check if either of the lists is empty.
        if (head1 == NULL || head2 == NULL) {
            return 0;
        }
        
        int counter = 0;
        
        // Traverse both linked lists simultaneously.
        while (head1 != NULL) {
            struct Node* temp = head2; // Reset temp to the beginning of the second list for each node of the first list.
            
            while (temp != NULL) {
                // Calculate the sum of the current nodes from both lists.
                int sum = head1->data + temp->data;
                
                // If the sum equals the given value x, increment the counter.
                if (sum == x) {
                    counter++;
                }
                
                // Move to the next node in the second list.
                temp = temp->next;
            }
            
            // Move to the next node in the first list.
            head1 = head1->next;
        }
        
        return counter;
    }
};


optimised :

class Solution{
public:
    // Function to count pairs from two linked lists whose sum is equal to a given value x.
    int countPairs(struct Node* head1, struct Node* head2, int x) {
        // Check if either of the lists is empty.
        if (head1 == NULL || head2 == NULL) {
            return 0;
        }
        
        int counter = 0;
        
        unordered_map<int,int>mp;
        while(head1!=NULL){
            mp[head1->data]++;
            head1=head1->next;
        }
        while(head2!=NULL){
            if(mp.find(x- head2->data)!=mp.end()){
                counter++;
            }
            head2=head2->next;
        }
        
        return counter;
    }
};
